#jinja2: trim_blocks:False
{{ ansible_managed | comment }}

cluster.name: {{ cluster_name }}

node.name: {{inventory_hostname}}

path.data: {{ osearch_data_dir }}

path.logs: {{ osearch_log_dir }}

network.bind_host: {{ osearch_network_bind_host }}
network.publish_host: _site_

node.roles:
{%- if 'data' in group_names %}
  - data
{%- endif %}
{%- if inventory_hostname in (master_eligible_nodes | map(attribute='hostname')) %}
  - master
{%- endif %}

{% if osearch_extra_config %}
{{ osearch_extra_config | to_nice_yaml }}
{% endif %}

{%- if osearch_extra_config['cluster.routing.allocation.awareness.attributes'] is defined and osearch_extra_config['cluster.routing.allocation.awareness.attributes'] == 'zone' %}
node.attr.zone: {{ hostvars[inventory_hostname]['regionzone'] }}
{% endif %}

{%- if inventory_hostname == master_eligible_nodes[0]['hostname'] -%}
# (https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-bootstrap-cluster.html#modules-discovery-bootstrap-cluster)
# Technically this doesn't have to be set to all master-eligible nodes on all such nodes, if we don't mind the cluster being fault-intolerant during startup, and it's a pain to manage because it should be removed after cluster setup, and never added again.
cluster.initial_master_nodes: {{ inventory_hostname }}
{%- endif %}

#Instead of defining discovery.seed_hosts statically here, set via a file ($OSEARCH_PATH_CONF/unicast_hosts.txt), which is automatically reloaded when changed (avoiding restarting opensearch each time).
discovery.seed_providers: file

## Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#discovery.zen.minimum_master_nodes:

plugins.security.allow_default_init_securityindex: true
plugins.security.audit.type: internal_opensearch
plugins.security.enable_snapshot_restore_privilege: true
plugins.security.check_snapshot_restore_write_privileges: true
plugins.security.restapi.roles_enabled: ["all_access", "security_rest_api_access"]
plugins.security.unsupported.restapi.allow_securityconfig_modification: true

plugins.security.ssl.transport.pemkey_filepath: "{{ osearch_ssl_key_path | basename }}"
plugins.security.ssl.transport.pemcert_filepath: "{{ osearch_ssl_crt_path | basename }}"
plugins.security.ssl.transport.pemtrustedcas_filepath: "{{ osearch_ssl_ca_path | basename }}"
plugins.security.ssl.transport.enforce_hostname_verification: true
plugins.security.ssl.transport.resolve_hostname: false

plugins.security.ssl.http.enabled: true
plugins.security.ssl.http.pemkey_filepath: "{{ osearch_ssl_key_path | basename }}"
plugins.security.ssl.http.pemcert_filepath: "{{ osearch_ssl_crt_path | basename }}"
plugins.security.ssl.http.pemtrustedcas_filepath: "{{ osearch_ssl_ca_path | basename }}"
plugins.security.ssl.http.clientauth_mode: "{{ osearch_ssl_clientauth_mode | default('')}}"

plugins.security.nodes_dn:
  - CN={{cluster_name}}-*.{{cluster_vars.dns_user_domain}},DC={{cluster_vars.dns_user_domain}}
plugins.security.authcz.admin_dn:
  - CN=admin,DC={{cluster_vars.dns_user_domain}}
