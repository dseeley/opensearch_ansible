---

- name: ssl_ownca | CA stuff (localhost only)
  block:
    - name: "Create {{ playbook_ca_yaml | dirname }} directory"
      file: { path: "{{ playbook_ca_yaml | dirname }}", state: directory }

    - name: ssl_ownca | Generate CA RSA private key
      community.crypto.openssl_privatekey_pipe:
        format: "pkcs8"
      register: r__openssl_privatekey_pipe
      no_log: true

    - name: ssl_ownca | Generate CA CSR
      community.crypto.openssl_csr_pipe:
        privatekey_content: "{{r__openssl_privatekey_pipe.privatekey}}"
        basic_constraints: ["CA:TRUE", "pathlen:0"]
        basic_constraints_critical: true
        key_usage: ["cRLSign", "digitalSignature", "keyCertSign"]
        key_usage_critical: true
        extended_key_usage: ["clientAuth", "serverAuth"]
        extended_key_usage_critical : true
        subject: |
          {%- set subj = {"OU": "CA"} -%}
          {%- if 'dns_user_domain' in cluster_vars and cluster_vars.dns_user_domain!="" -%}
            {%- set _ = subj.update({"DC": cluster_vars.dns_user_domain }) -%}
            {%- set _ = subj.update({"CN": "root.ca."+cluster_vars.dns_user_domain }) -%}
          {%- endif -%}
          {{subj}}
        use_common_name_for_san: false
      register: r__openssl_csr_pipe

    - name: ssl_ownca | Generate the self-signed CA certificate
      community.crypto.x509_certificate_pipe:
        provider: selfsigned
        privatekey_content: "{{r__openssl_privatekey_pipe.privatekey}}"
        csr_content: "{{r__openssl_csr_pipe.csr}}"
        selfsigned_not_after: "+7305d"       # Expiry in 20 years (incl leap years)
      register: r__x509_certificate_pipe

    - name: ssl_ownca | Vault-encrypt the CA privatekey
      dseeley.ansible_vault_pipe.ansible_vault_pipe:
        plaintext: "{{r__openssl_privatekey_pipe.privatekey}}"
        action: encrypt
      register: r__ansible_vault_encrypt_ca_privatekey

    - name: "ssl_ownca | Create {{ playbook_ca_yaml }}"
      copy:
        content: |
          ## Note: this is a self-signed CA certificate, generated in "{{ ansible_play_name }}" 
          ssl_ca:
            ca-crt.pem: |
              {{ r__x509_certificate_pipe.certificate | trim | indent(4) }}
            ca-key.pem: !vault |
              {{ r__ansible_vault_encrypt_ca_privatekey.vaulttext | trim | indent(4) }}
        dest: "{{ playbook_ca_yaml }}"
        force: true
  run_once: true
  delegate_to: localhost
  when: ssl_ca is not defined

- name: "ssl_ownca | Reload {{ playbook_ca_yaml }} - for all hosts"
  include_vars: "{{ playbook_ca_yaml }}"
