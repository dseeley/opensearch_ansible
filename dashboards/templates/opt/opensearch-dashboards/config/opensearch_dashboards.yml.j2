#jinja2: trim_blocks:False
{{ ansible_managed | comment }}

# dashboards is served by a back end server. This setting specifies the port to use.
#server.port: 5601

# Specifies the address to which the dashboards server will bind. IP addresses and host names are both valid values.
# The default is 'localhost', which usually means remote machines will not be able to connect.
# To allow connections from remote users, set this parameter to a non-loopback address.
server.host: "{{ dashboards_network_host }}"

# Enables you to specify a path to mount dashboards at if you are running behind a proxy.
# Use the `server.rewriteBasePath` setting to tell dashboards if it should remove the basePath
# from requests it receives, and to prevent a deprecation warning at startup.
# This setting cannot end in a slash.
#server.basePath: ""

# Specifies whether dashboards should rewrite requests that are prefixed with
# `server.basePath` or require that they are rewritten by your reverse proxy.
# This setting was effectively always `false` before dashboards 6.3 and will
# default to `true` starting in dashboards 7.0.
#server.rewriteBasePath: false

# Specifies the public URL at which dashboards is available for end users. If
# `server.basePath` is configured this URL should end with the same basePath.
#server.publicBaseUrl: ""

# The maximum payload size in bytes for incoming server requests.
server.maxPayloadBytes: 5242880

# The dashboards server's name.  This is used for display purposes.
server.name: "{{ansible_hostname}}"

# The URLs of the opensearch instances to use for all your queries.
opensearch.hosts: {{ osearch_master_nodes | map('regex_replace', '^(.*)$', 'https://' + '\\1' + ':9200')}}

# dashboards uses an index in opensearch to store saved searches, visualizations and
# dashboards. dashboards creates a new index if the index doesn't already exist.
#dashboards.index: ".dashboards"

# The default application to load.
#dashboards.defaultAppId: "home"

# If your opensearch is protected with basic authentication, these settings provide
# the username and password that the dashboards server uses to perform maintenance on the dashboards
# index at startup. Your dashboards users still need to authenticate with opensearch, which
# is proxied through the dashboards server.
opensearch.username: "kibanaserver"
opensearch.password: "{{ osearch_internal_users['kibanaserver']['_password'] }}"

# dashboards can also authenticate to opensearch via "service account tokens".
# If may use this token instead of a username/password.
# opensearch.serviceAccountToken: "my_token"

# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.
# These settings enable SSL for outgoing requests from the dashboards server to the browser.
server.ssl.enabled: true
server.ssl.certificate: {{ dashboards_ssl_certificate }}
server.ssl.key: {{ dashboards_ssl_key }}
server.ssl.certificateAuthorities: [ "{{ dashboards_ssl_certificate_authority }}" ]

# Optional settings that provide the paths to the PEM-format SSL certificate and key files.
# These files are used to verify the identity of dashboards to opensearch and are required when
# plugins.security.http.ssl.client_authentication in opensearch is set to required.
opensearch.ssl.certificate: {{ dashboards_ssl_certificate }}
opensearch.ssl.key: {{ dashboards_ssl_key }}

# Optional setting that enables you to specify a path to the PEM file for the certificate
# authority for your opensearch instance.
opensearch.ssl.certificateAuthorities: [ "{{ dashboards_ssl_certificate_authority }}" ]

# To disregard the validity of SSL certificates, change this setting's value to 'none'.
opensearch.ssl.verificationMode: none

# Time in milliseconds to wait for opensearch to respond to pings. Defaults to the value of
# the dashboards.requestTimeout setting.
#opensearch.pingTimeout: 1500

# Time in milliseconds to wait for responses from the back end or opensearch. This value
# must be a positive integer.
#opensearch.requestTimeout: 30000

# List of dashboards client-side headers to send to opensearch. To send *no* client-side
# headers, set this value to [] (an empty list).
opensearch.requestHeadersWhitelist: [ authorization,securitytenant ]

# Header names and values that are sent to opensearch. Any custom headers cannot be overwritten
# by client-side headers, regardless of the dashboards.requestHeadersWhitelist configuration.
#opensearch.customHeaders: {}

# Time in milliseconds for opensearch to wait for responses from shards. Set to 0 to disable.
opensearch.shardTimeout: 60000

# Logs queries sent to opensearch. Requires logging.verbose set to true.
#dashboards.logQueries: false

# Specifies the path where dashboards creates the process ID file.
pid.file: {{dashboards_pid_dir}}/dashboards.pid

# Enables you to specify a file where dashboards stores log output.
logging.dest: {{ dashboards_log_dir }}/dashboards.log

# Set the value of this setting to true to suppress all logging output.
#logging.silent: false

# Set the value of this setting to true to suppress all logging output other than error messages.
#logging.quiet: false

# Set the value of this setting to true to log all events, including system usage information
# and all requests.
logging.verbose: true

# Set the interval in milliseconds to sample system and process performance
# metrics. Minimum is 100ms. Defaults to 5000.
#ops.interval: 5000

# Specifies locale to be used for all localizable strings, dates and number formats.
# Supported languages are the following: English - en , by default , Chinese - zh-CN .
#i18n.locale: "en"

{%- if dashboards_multitenancy_enabled is defined and dashboards_multitenancy_enabled|bool %}
opensearch_security.multitenancy.enabled: true
opensearch_security.multitenancy.tenants.preferred: ["Private", "Global"]
opensearch_security.readonly_mode.roles: ["kibana_read_only"]
{% endif %}
